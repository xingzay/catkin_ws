#
# Planners & Controllers Selection
# 
# a. for goal reaching:
# base_global_planner: "global_planner/GlobalPlanner"
base_global_planner: "navfn/myGlobalPlanner"
# b. for traj. tracking:
# fixed_global_planner: "fixed_global_planner/FixedGlobalPlanner"
# c. for control:  
# base_local_planner: "dwa_local_planner/DWAPlannerROS"
# base_local_planner: "eband_local_planner/EBandPlannerROS"
base_local_planner: "teb_local_planner/TebLocalPlannerROS"

#
# Global Planner Config:
#
# the rate in Hz at which to run the planning loop. <=0 for only once:
planner_frequency: -1.0
# how many times we will recall the planner in an attempt to find a valid plan before space-clearing operations are performed
max_planning_retries: 4
# how long the planner will wait in seconds in an attempt to find a valid plan before space-clearing operations are performed.
planner_patience: 5.0

#
# Local Controller Config
#
# the rate in Hz at which to run the control loop and send velocity commands to the base.
controller_frequency: 10.0
# how long the controller will wait in seconds without receiving a valid control before space-clearing operations are performed.
controller_patience: 10.0

#
# Oscillation Detection Config
#
# how long in seconds to allow for oscillation before executing recovery behaviors.
oscillation_timeout: 30.0 #60.0 #5.0
# how far in meters the robot must move to be considered not to be oscillating.
oscillation_distance: 0.50

#
# Obstacle Clearning Config
#
# whether or not to clear the global costmap on make_plan service call
make_plan_clear_costmap: true
# whether or not to add the original goal to the path if it is unreachable in the make_plan service call.
make_plan_add_unreachable_goal: false
# determines whether or not to shutdown the costmaps of the node when move_base is in an inactive state
shutdown_costmaps: false
# whether or not to enable the move_base recovery behaviors to attempt to clear out space.
recovery_behavior_enabled: false
# wetermines whether or not the robot will attempt an in-place rotation when attempting to clear out space.
clearing_rotation_allowed: false
# the distance away from the robot in meters at which obstacles will be cleared from the costmap when attempting to clear space in the map.
conservative_reset_dist: 1.00

#
# Recovery Behaviors Config
#
recovery_behaviors:
  - name: 'conservative_reset'
    type: 'clear_costmap_recovery/ClearCostmapRecovery'
  #- name: 'aggressive_reset'
  #  type: 'clear_costmap_recovery/ClearCostmapRecovery'
  #- name: 'super_reset'
  #  type: 'clear_costmap_recovery/ClearCostmapRecovery'
  - name: 'clearing_rotation'
    type: 'rotate_recovery/RotateRecovery'
  #- name: 'move_slow_and_clear'
    #type: 'move_slow_and_clear/MoveSlowAndClear'
    
conservative_reset:
  reset_distance: 1.0
  #layer_names: [static_layer, obstacle_layer, inflation_layer]
  layer_names: [obstacle_layer]

aggressive_reset:
  reset_distance: 3.0
  #layer_names: [static_layer, obstacle_layer, inflation_layer]
  layer_names: [obstacle_layer]

super_reset:
  reset_distance: 5.0
#layer_names: [static_layer, obstacle_layer, inflation_layer]
  layer_names: [obstacle_layer]

move_slow_and_clear:
  clearing_distance: 0.5
  limited_trans_speed: 0.1
  limited_rot_speed: 0.4
  limited_distance: 0.3
